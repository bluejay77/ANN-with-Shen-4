
antti@antti-HP-Compaq-dc7100-SFF-PE271ET ~/ShenANN $ ./Shen

Shen, copyright (C) 2010-2015 Mark Tarver
www.shenlanguage.org, Shen 19.2
running under Common Lisp, implementation: CLisp
port 1.9 ported by Mark Tarver


(0-) (load "defstruct.shen")
defstruct.type#struct-type
defstruct.char-upcase
defstruct.string-capitalize
defstruct.sym-capitalize
defstruct.slot-type
defstruct.slots-types
defstruct.slots-defs
defstruct.datatypes
defstruct.accessors
defstruct.setters
defstruct.constructor-type
defstruct.constr-init
defstruct.constructor
defstruct.struct-aux
defstruct-macro

run time: 1.1000000201165676 secs
loaded

(1-) (load "tc_for.shen")
for-expand
for-macro

run time: 0.06800007820129395 secs
loaded

(2-) (load "maths-lib1.shen")
sign
abs
floor
maths.floor-pos
maths.floor-neg
maths.floor-h
ceiling
trunc
maths-round0
maths.round-down?
int-part
frac-part
modf
maths-round'
maths.pow-2
fmod
frexp
maths.frexp-neg
maths.frexp-pos
maths.mult-2
maths.div-2
ldexp
square
maths.power-pos
power
maths.type#global
1.0e-15
2.7182818284590455
2.302585092994046
0.6931471805599454
3.141592653589793
1.5707963267948966
0.7853981633974484
6.283185307179586
0.31830988618379075
0.6366197723675815
1.4426950408889634
0.43429448190325187
1.4142135623730951
0.7071067811865476
1.1283791670955126
0.017453292519943295
57.29577951308232
maths.small-enough?
rad->degs
degs->rad
dms->degs
maths.dms->degs-pos
degs->dms
maths.range-ok?
exp
maths.exp-large
maths.exp-h
maths.exp-sum
sinh
cosh
tanh
expt
sqrt
maths.sqrt-scale
maths.sqrt-h
maths.sqrt-iter
maths.mean
log
maths.log-scale
maths.log-h
maths.log-sum
log10
log2
log'
sin
maths.sin-h
maths.sin-sum
cos
tan
asin
maths.asin-h
maths.asin-sum
acos
atan
maths.atan-h
maths.atan-sum
maths.atan-lt1
maths.atan-gt1
maths.atan-transf
atan2
even?
odd?
natural?
positive?
negative?
zero?
maths.rsh
maths.rsh-h
maths./-pos
maths.div-w
maths.pow-2div
divisible-by?
maths.mod-pos
maths.div-ww
/mod
maths./mod-h
div
maths.div-h
mod
maths.mod-h
/rem
maths./rem-h
trunc-div
rem
/%
maths./%-h
div-eucl
maths.adjust-Q
%
gcd
lcm
!=
max
min

run time: 3.1680002212524414 secs
loaded

(3-) (load "array.shen")
outer-product
scalar-mult
output-array
array-sum
transpose
output-array-v

run time: 0.38000011444091797 secs
loaded

(4-) (load "hebbian.shen")
<(@p <1 2 3 4 5 6> <1 1 1>) (@p <6 5 4 3 2 1> <-1 -1 -1>) (@p <0 0 0 0 0 0> <-1 -1 -1>) (@p <5 1 2 8 5 3> <-1 -1 -1>) (@p <20 30 40 50 60 70> <1 1 1>) (@p <-1 2 -55 30 11 0> <-1 -1 -1>) (@p <-10 -9 -8 -7 -6 -5> <1 1 1>)>
type#hebbian
mk-hebbian
hebbian-neuron-output->
hebbian-treshold-function->
hebbian-activation-level->
hebbian-weights-vec->
hebbian-inputs-vec->
hebbian-nr-inputs->
hebbian-neuron-output
hebbian-treshold-function
hebbian-activation-level
hebbian-weights-vec
hebbian-inputs-vec
hebbian-nr-inputs
transfer-function
activation-level
activation-level-h
treshold
<<6 <... ... ... ... ... ...> <... ... ... ... ... ...> 0 #<FUNCTION LAMBDA (V2165) (treshold V2165)> 0> <6 <... ... ... ... ... ...> <... ... ... ... ... ...> 0 #<FUNCTION LAMBDA (V2165) (treshold V2165)> 0> <6 <... ... ... ... ... ...> <... ... ... ... ... ...> 0 #<FUNCTION LAMBDA (V2165) (treshold V2165)> 0>>
assign-hebbian
train-hebbian
train-hebbian-ann
test-hebbian
list2vec
list2vec-h

run time: 2.5399999618530273 secs
loaded

(5-) (assign-hebbian)
[]

(6-) (time (train-hebbian 200))

run time: 0.7600002288818359 secs
[]

(7-) (test-hebbian)

Give a sequence of six integers: 4 5 6 7 8 9

Numbers: [4 5 6 7 8 9]

Vector: <4 5 6 7 8 9>


Output of ANN: [1 1 1]
[]

(8-) (test-hebbian)

Give a sequence of six integers: 1 2 3 4 5 6

Numbers: [1 2 3 4 5 6]

Vector: <1 2 3 4 5 6>


Output of ANN: [1 1 1]
[]

(9-) (test-hebbian)

Give a sequence of six integers: -1 -2 -3 -4 -5 -6

Numbers: [-1 -2 -3 -4 -5 -6]

Vector: <-1 -2 -3 -4 -5 -6>


Output of ANN: [-1 -1 -1]
[]

(10-) (test-hebbian)

Give a sequence of six integers: -5 -6 -7 -8 -9 -10

Numbers: [-5 -6 -7 -8 -9 -10]

Vector: <-5 -6 -7 -8 -9 -10>


Output of ANN: [-1 -1 -1]
[]

(11-) (test-hebbian)

Give a sequence of six integers: 0 0 0 0 0 0

Numbers: [0 0 0 0 0 0]

Vector: <0 0 0 0 0 0>


Output of ANN: [1 1 1]
[]

(12-) (QUIT)
antti@antti-HP-Compaq-dc7100-SFF-PE271ET ~/ShenANN $

